name: DND 3rd Edition API Deployment

on:
  push:
    paths:
      - 'docs/**'
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
#concurrency:
#  group: "pages"
#  cancel-in-progress: false

jobs:
  BuildAPI:
    runs-on: ubuntu-latest
    needs: BuildAPI
    env:
      DND3RD_LAMBDA_ARN: ${{ vars.DND3RD_API_LAMBDA_FUNCTION }}
      COGNITO_ISSUER: ${{ vars.COGNITO_ISSUER }}
      COGNITO_AUDIENCE_1: ${{ vars.COGNITO_AUDIENCE_1 }}
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      #Install the npm package openapi-merger package
      - name: Install openapi-merger
        run: npm install openapi-merger

      # Merge OpenAPI files using the NPM package openapi-merger
      - name: Merge OpenAPI Files
        working-directory: ./docs/openapi
        run: npx openapi-merger -i openapi.yaml -o ../swagger_deployment.yaml

      - name: Replace Swagger.yaml Fields
        working-directory: ./docs/deploy
        run: sh ./replaceStringInYaml.sh

  DeployGithubPages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  DeployAPI:
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    needs: BuildAPI
    steps:
    - name: Deploy API
      working-directory: ./docs/deploy
      run: sh ./deploy.sh