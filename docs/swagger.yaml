openapi: 3.0.0
info:
  version: '0.1'
  title: 'Dnd 3.5 edition API on Scritch Ninja'
  description: ''
security:
  - BasicAuth: []
paths:
  /character/{cognitoUserId}/{characterId}:
    get:
      summary: Returns a character and their top level stats
      description: Returns items such as name, level, experience and not listed items such as skills, feats, attacks, armor, inventory, etc...
      responses:
        '200':
          description: Character retrieved.
      parameters:
        - $ref: "#/components/parameters/cognitoUserIdParam"
        - $ref: "#/components/parameters/characterIdParam"
  /character:
    post:
      summary: Creates a character with their top level stats
      description: Creates the character including name, level, experience and not listed items such as skills, feats, attacks, armor, inventory, etc...
      responses:
        '201':
          description: Character created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
  /character/abilities/{cognitoUserId}/{characterId}:
    get:
      summary: Gets the abilities associated with a character
      description: Gets all of the abilities and scores associated with a set characterId
      responses:
          '200':
            description: Abilities retrieved.
      parameters:
        - $ref: "#/components/parameters/cognitoUserIdParam"
        - $ref: "#/components/parameters/characterIdParam"
  /character/abilities:
    post:
      summary: Create abilities associated with a character
      description: Creates the abilities associated with a character
      responses:
        '201':
          description: Ability created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ability'
  /character/skills/{cognitoUserId}/{characterId}:
    get:
      summary: Gets the skills associated with a character
      description: Gets all of the skills and scores associated with a set characterId
      responses:
        '200':
          description: Skills retrieved.
      parameters:
        - $ref: "#/components/parameters/cognitoUserIdParam"
        - $ref: "#/components/parameters/characterIdParam"
  /character/skills:
    post:
      summary: Create skills associated with a character
      description: Creates the skills associated with a character
      responses:
        '201':
          description: Skills created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
  /character/saving-throws/{cognitoUserId}/{characterId}:
    get:
      summary: Gets the saving throws associated with a character
      description: Gets all of the saving throws and scores associated with a set characterId
      responses:
        '200':
          description: Saving throws retrieved.
      parameters:
        - $ref: "#/components/parameters/cognitoUserIdParam"
        - $ref: "#/components/parameters/characterIdParam"
  /character/saving-throws:
    post:
      summary: Create saving throws associated with a character
      description: Creates the saving throws associated with a character
      responses:
        '201':
          description: Saving throws created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
  /character/weapons/{cognitoUserId}/{characterId}:
    get:
      summary: Gets the weapons associated with a character
      description: Gets all of the weapons and scores associated with a set characterId
      responses:
        '200':
          description: Weapons retrieved.
      parameters:
        - $ref: "#/components/parameters/cognitoUserIdParam"
        - $ref: "#/components/parameters/characterIdParam"
  /character/weapons:
    post:
      summary: Create weapons associated with a character
      description: Creates the weapons associated with a character
      responses:
        '201':
          description: Weapons created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weapon'
  /character/armor/{cognitoUserId}/{characterId}:
    get:
      summary: Gets the weapons associated with a character
      description: Gets all of the weapons and scores associated with a set characterId
      responses:
        '200':
          description: Weapons retrieved.
      parameters:
        - $ref: "#/components/parameters/cognitoUserIdParam"
        - $ref: "#/components/parameters/characterIdParam"
  /character/armor:
    post:
      summary: Create weapons associated with a character
      description: Creates the weapons associated with a character
      responses:
        '201':
          description: Weapons created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Armor'
  /character/feats/{cognitoUserId}/{characterId}:
    get:
      summary: Gets the abilities associated with a character
      description: Gets all of the abilities and scores associated with a set characterId
      responses:
        '200':
          description: Abilities retrieved.
      parameters:
        - $ref: "#/components/parameters/cognitoUserIdParam"
        - $ref: "#/components/parameters/characterIdParam"
  /character/feats:
    post:
      summary: Create abilities associated with a character
      description: Creates the abilities associated with a character
      responses:
        '201':
          description: Ability created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ability'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/CREWDEREK/Dnd3rdScritchNinja/0.1
components:
  parameters:
    cognitoUserIdParam:
      name: cognitoUserId
      in: path
      required: true
      description: The unique ID associated with the users Cognito account
      schema:
        type: string
    characterIdParam:
      name: characterId
      in: path
      required: true
      description: The unique ID associated with the character to get
      schema:
        type: number
  schemas:
    Currency:
      properties:
        copper:
          type: number
        silver:
          type: number
        gold:
          type: number
        platinum:
          type: number
    Spells:
      properties:
        characterId:
          type: number
        name:
          type: string
        description:
          type: string
        level:
          type: number
        components:
          type: array
          items:
            type: string
        castingTime:
          type: string
        range:
          type: number
        rangeIncrementPerLevel:
          type: number
        duration:
          type: number
        savingThrows:
          type: array
          items:
            type: string
        isSpellResistant:
          type: boolean
    SpecialAbilities:
      properties:
        characterId:
          type: number
        name:
          type: string
        description:
          type: string
    Feat:
      properties:
        characterId:
          type: number
        name:
          type: string
        description:
          type: string
    Item:
      properties:
        isEquipped:
          type: boolean
        equipmentSlots:
          type: array
          items:
            type: string
        weight:
          type: number
        size:
          type: string
        cost:
          type: number
          description: In copper coins
        notes:
          type: string
    Armor:
      properties:
        characterId:
          type: number
        name:
          type: string
        armorClassBonus:
          type: number
        armorType:
          type: string
        maxDexterityModifier:
          type: number
        maxCharacterSpeed:
          type: number
        checkPenalty:
          type: number
        spellFailure:
          type: number
        isShield:
          type: boolean
        itemInfo:
          type: object
          $ref: '#/components/schemas/Item'
    Damage:
      properties:
        diceAmount:
          type: number
        diceSides:
          type: number
        addedDamage:
          type: number
        damageType:
          type: string
        canCritical:
          type: boolean
    Weapon:
      properties:
        characterId:
          type: number
        name:
          type: string
        weaponType:
          type: string
        damages:
          type: array
          items:
            $ref: '#/components/schemas/Damage'
        critical:
          type: object
          properties:
            criticalMinRange:
              type: number
            criticalMultiplier:
              type: number
        range:
          type: number
        requiresAmmunition:
          type: boolean
        ammunition:
          type: number
        itemInfo:
          type: object
          $ref: '#/components/schemas/Item'
    SavingThrow:
      properties:
        characterId:
          type: number
        name:
          type: string
        score:
          type: number
        savingThrowType:
          type: string
    Skill:
      properties:
        characterId:
          type: number
        name:
          type: string
        score:
          type: number
        skillType:
          type: string
        isTrained:
          type: boolean
    Ability:
      properties:
        characterId:
          type: number
        name:
          type: string
        score:
          type: number
        abilityType:
          type: string
    Character:
      properties:
        cognitoUserId:
          type: string
        characterId:
          type: number
        characterName:
          type: string
        characterLevel:
          type: number
        characterExperience:
          type: number
        race:
          type: string
        alignment:
          type: string
        deity:
          type: string
        size:
          type: string
        age:
          type: number
        gender:
          type: string
        height:
          type: string
        weight:
          type: string
        characterDescription:
          type: string
        maxSkillRanks:
          type: number
        languages:
          type: array
          items:
            type: string
        classInfo:
          $ref: '#/components/schemas/Classes'
        currencyInfo:
          $ref: '#/components/schemas/Currency'
        baseAttackBonuses:
          type: array
          items:
            type: number
    Classes:
      type: array
      items:
        type: object
        properties:
          className:
            type: string
          level:
            type: number
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
